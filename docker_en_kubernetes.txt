#docker / kubernetes:
#https://www.linuxtechi.com/install-configure-kubernetes-ubuntu-18-04-ubuntu-18-10/


#add the following lines in /etc/hosts file on all three systems,
sudo nano /etc/hosts


+10.0.0.4 Ubuntu-master-all
+10.0.0.5 ubuntu-minion1

#STEP 2:
#master: 
sudo apt-get install docker.io -y

#minion(s): 
sudo apt-get install docker.io -y

#start and enable the docker service using below systemctl commands, these commands needs to be executed on master and slave nodes.
sudo systemctl start docker
sudo systemctl enable docker
sudo docker --version

#STEP3:
#following commands are for both master as slave 

sudo apt-get install apt-transport-https curl -y
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

#STEP4:
#following commands are for both master as slave

#As per the Kubernetes Official web site, it is recommended to disable swap on all the nodes including master node

sudo swapoff -a

sudo apt-get install kubeadm -y

#version check
kubeadm version


#Step:5) Initialize and Start Kubernetes Cluster on Master Node using Kubeadm

sudo kubeadm init --pod-network-cidr=172.168.10.0/24

# Onderstaand stuk print van resultaat bovenstaande commando

#Your Kubernetes control-plane has initialized successfully!
#
#To start using your cluster, you need to run the following as a regular user:
#
#  mkdir -p $HOME/.kube
#  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
#  sudo chown $(id -u):$(id -g) $HOME/.kube/config
#
#You should now deploy a pod network to the cluster.
#Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
#  https://kubernetes.io/docs/concepts/cluster-administration/addons/
#
#Then you can join any number of worker nodes by running the following on each as root:
#
#kubeadm join 10.0.0.4:6443 --token rrfpa3.vu207kl1wu2r11fy --discovery-token-ca-cert-hash sha256:c72e3249deeee8e654e54c8bbff8a08c7ebcae01630fd4842d4573c6a59de92d


mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

#status
kubectl get nodes

#Letâ€™s deploy the pod network, Pod network is the network through which our cluster nodes will communicate with each other. We will deploy Flannel as our pod network, Flannel will provide the overlay network between cluster nodes.

STEP 6:
#deploy pod network
sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

#opniew kubectl to check if status = ready, so this confirms that our master node is in healthy state and ready to form a cluster.

#STEP 7: LETS ADD THE SLAVES
# command from master, step 5 is now to be entered on the minions:
sudo kubeadm join 10.0.0.4:6443 --token rrfpa3.vu207kl1wu2r11fy --discovery-token-ca-cert-hash sha256:c72e3249deeee8e654e54c8bbff8a08c7ebcae01630fd4842d4573c6a59de92d

#on the master for final confirmation:
kubectl get nodes







# docker with saltstack
# https://opsnotice.xyz/docker-with-saltstack/
# created docker.sls for: /srv/salt/docker.sls



















